input {
        tcp {
                port => 5000
        }
}

filter{
    grok{
        match => { "message" => "%{USERNAME:application}%{SPACE}%{USERNAME:logtype}%{SPACE}(%{IP:victim:ip}%{SPACE})?%{GREEDYDATA:logdata}"}
    }
    # Lookup the team name based on IP
    translate{
        field => "[victim]"
        destination => "[team]"
        dictionary_path => "./lookups/host_team.json"
        fallback => "redteam"
        regex => true
        #add_tag => ["%{team}"]
    }

    # Lookup the OS based on the IP
    translate{
        field => "[victim]"
        regex => true
        destination => "[os]"
        dictionary_path => "./lookups/host_os.json"
    }
    # Lookup the OS family based on the OS
    translate{
        field => "[os]"
        regex => true
        destination => "[os_family]"
        dictionary_path => "./lookups/os_families.json"
    }

    # If its redteam or unknown, we dont have a victim IP and its a generic log
    # Make it 'ip' not victim
    if [logtype] == "GENERIC" and [team] !~ /[T|t]eam\d+/ {
        mutate{
            rename => ["victim", "ip"]
        }
    }

    # Pull the credentials from the log
    if [logtype] == "CREDENTIAL"{
        grok{
            match => {logdata => "%{USERNAME:credtype}(\s+|:)%{USERNAME:username}(\s+|:)%{GREEDYDATA:password}"}
        }
    }
    
    if [logtype] == "CONN_TEST"{
    	drop { }
    }

    # Pull /etc/hosts data
    if [logtype] =~ "HOSTS.*"{
       grok{
               match => {logdata => "%{IP:host_ip}%{SPACE}%{GREEDYDATA:host_name}"}
       }
    }

    # Figure out if its a beacon or an exploit
    if [logtype] == "BOXACCESS"{
        if [logdata] =~ /.*[E|e]xploit.*/ {
            mutate{
                add_field => {"accesstype" => "exploit"}
            }
        }
        if [logdata] =~ /.*([B|b]eacon|[C|c]allback).*/{
            mutate{
                add_field => {"accesstype" => "beacon"}
            }
        }
    }
}


# Use this to debug the grok filters
#output {
#    file {
#        path => "/tmp/json_output.txt"
#        codec => "json"
#    }
#}
output {
	elasticsearch {
		hosts => "elasticsearch:9200"
	}
}
